--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v81 = v2(v0(v30, 16));
			if v19 then
				local v86 = 0;
				local v87;
				while true do
					if (v86 == 1) then
						return v87;
					end
					if (v86 == 0) then
						v87 = v5(v81, v19);
						v19 = nil;
						v86 = 1;
					end
				end
			else
				return v81;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v82 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % (((1640 - (1523 + 114)) - 1) ^ (((v33 - ((2 + 0) - 1)) - (v32 - (620 - (555 + (91 - 27))))) + (932 - (857 + 74))));
			return v82 - (v82 % (569 - (367 + 201)));
		else
			local v83 = (929 - (214 + 713)) ^ (v32 - (1 + 0));
			return (((v31 % (v83 + v83)) >= v83) and (1 + 0)) or (877 - (282 + 595));
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35 = 1065 - (68 + 997);
		local v36;
		local v37;
		while true do
			if (v35 == ((2228 - (892 + 65)) - ((538 - 312) + 1044))) then
				return (v37 * 256) + v36;
			end
			if (v35 == (0 - 0)) then
				v36, v37 = v1(v16, v18, v18 + (119 - (32 + (157 - 72))));
				v18 = v18 + 2 + 0;
				v35 = 1 + (0 - 0);
			end
		end
	end
	local function v23()
		local v38 = 350 - ((114 - 27) + 263);
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v38 == (180 - (67 + 113))) then
				v39, v40, v41, v42 = v1(v16, v18, v18 + 3 + 0);
				v18 = v18 + (9 - 5);
				v38 = 1 + 0;
			end
			if (v38 == 1) then
				return (v42 * (12338840 + 4438376)) + (v41 * (260471 - 194935)) + (v40 * ((1337 - (1069 + 118)) + 106)) + v39;
			end
		end
	end
	local function v24()
		local v43 = v23();
		local v44 = v23();
		local v45 = (1140 - (116 + 1022)) - 1;
		local v46 = (v20(v44, 1 - 0, 4 + 16) * (2 ^ (133 - 101))) + v43;
		local v47 = v20(v44, 37 - 16, 31 + 0);
		local v48 = ((v20(v44, (484 + 339) - (368 + 423)) == (3 - 2)) and -(19 - (10 + 8))) or ((10 - 7) - 2);
		if (v47 == ((1569 - 1127) - (416 + 26))) then
			if (v46 == (859 - (814 + 45))) then
				return v48 * (0 - 0);
			else
				v47 = 1 + 0;
				v45 = 0 - 0;
			end
		elseif (v47 == (2485 - ((357 - 212) + 16 + 277))) then
			return ((v46 == (430 - (16 + 28 + 386))) and (v48 * ((1487 - (998 + 488)) / 0))) or (v48 * NaN);
		end
		return v8(v48, v47 - (325 + 698)) * (v45 + (v46 / ((2 + 0) ^ (824 - (201 + 571)))));
	end
	local function v25(v49)
		local v50 = 885 - (261 + 624);
		local v51;
		local v52;
		while true do
			if (v50 == (4 - 1)) then
				return v6(v52);
			end
			if (v50 == (1080 - (1020 + (235 - 175)))) then
				v51 = nil;
				if not v49 then
					v49 = v23();
					if (v49 == (1423 - (630 + 793))) then
						return "";
					end
				end
				v50 = 3 - 2;
			end
			if (v50 == (9 - 7)) then
				v52 = {};
				for v88 = 1 + 0 + 0, #v51 do
					v52[v88] = v2(v1(v3(v51, v88, v88)));
				end
				v50 = 9 - 6;
			end
			if (v50 == (1748 - ((2091 - 1331) + 987))) then
				v51 = v3(v16, v18, (v18 + v49) - ((16 + 1898) - (1789 + 124)));
				v18 = v18 + v49;
				v50 = 768 - (745 + 21);
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v53 = 0;
		local v54;
		local v55;
		local v56;
		local v57;
		local v58;
		local v59;
		while true do
			local v66 = 0 - 0;
			while true do
				if (v66 ~= 1) then
				else
					if (v53 == (2 + 0)) then
						for v99 = 2 - 1, v23() do
							local v100 = v21();
							if (v20(v100, 1, 3 - 2) == (867 - (550 + 317))) then
								local v103 = 0 - 0;
								local v104;
								local v105;
								local v106;
								local v107;
								while true do
									if (v103 == 1) then
										v106 = nil;
										v107 = nil;
										v103 = 2 - 0;
									end
									if (v103 == (5 - 3)) then
										while true do
											if (v104 == (287 - (134 + 151))) then
												local v114 = 0;
												local v115;
												while true do
													if (v114 == (1665 - (970 + 695))) then
														v115 = 0;
														while true do
															if (v115 == (0 - 0)) then
																if (v20(v106, 1991 - (582 + 1408), 3 - 2) == (1 - 0)) then
																	v107[2] = v59[v107[2]];
																end
																if (v20(v106, 7 - 5, 1826 - (1195 + 629)) ~= (1 - 0)) then
																else
																	v107[244 - (187 + 54)] = v59[v107[783 - (162 + 618)]];
																end
																v115 = 1;
															end
															if (v115 == 1) then
																v104 = 3;
																break;
															end
														end
														break;
													end
												end
											end
											if (v104 ~= (1 + 0)) then
											else
												local v116 = 0;
												while true do
													if ((1 + 0) ~= v116) then
													else
														v104 = 3 - 1;
														break;
													end
													if (v116 == 0) then
														v107 = {v22(),v22(),nil,nil};
														if (v105 == (0 + 0)) then
															local v306 = 1636 - (1373 + 263);
															local v307;
															while true do
																if (v306 == (1000 - (451 + 549))) then
																	v307 = 0;
																	while true do
																		if (v307 == (0 + 0)) then
																			v107[4 - 1] = v22();
																			v107[4] = v22();
																			break;
																		end
																	end
																	break;
																end
															end
														elseif (v105 == 1) then
															v107[4 - 1] = v23();
														elseif (v105 == 2) then
															v107[1387 - (746 + 638)] = v23() - ((1 + 1) ^ 16);
														elseif (v105 ~= 3) then
														else
															local v430 = 0 - 0;
															local v431;
															while true do
																if (v430 == (341 - (218 + 123))) then
																	v431 = 1581 - (1535 + 46);
																	while true do
																		if (v431 ~= (0 + 0)) then
																		else
																			v107[3] = v23() - ((1 + 1) ^ (576 - (306 + 254)));
																			v107[1 + 3] = v22();
																			break;
																		end
																	end
																	break;
																end
															end
														end
														v116 = 1 - 0;
													end
												end
											end
											if (v104 == (1470 - (899 + 568))) then
												if (v20(v106, 3, 2 + 1) == (2 - 1)) then
													v107[607 - (268 + 335)] = v59[v107[294 - (60 + 230)]];
												end
												v54[v99] = v107;
												break;
											end
											if (v104 == 0) then
												local v118 = 0;
												local v119;
												while true do
													if ((572 - (426 + 146)) == v118) then
														v119 = 0;
														while true do
															if (v119 == (1 + 0)) then
																v104 = 1457 - (282 + 1174);
																break;
															end
															if (v119 == 0) then
																v105 = v20(v100, 813 - (569 + 242), 8 - 5);
																v106 = v20(v100, 1 + 3, 6);
																v119 = 1025 - (706 + 318);
															end
														end
														break;
													end
												end
											end
										end
										break;
									end
									if (v103 == 0) then
										v104 = 0;
										v105 = nil;
										v103 = 1252 - (721 + 530);
									end
								end
							end
						end
						for v101 = 1272 - (945 + 326), v23() do
							v55[v101 - 1] = v28();
						end
						return v57;
					end
					break;
				end
				if (v66 ~= (0 - 0)) then
				else
					if (v53 == (1 + 0)) then
						local v96 = 700 - (271 + 429);
						local v97;
						while true do
							if (0 == v96) then
								v97 = 0 + 0;
								while true do
									if (2 == v97) then
										v53 = 1502 - (1408 + 92);
										break;
									end
									if (v97 ~= (1087 - (461 + 625))) then
									else
										for v109 = 1, v58 do
											local v110 = 0;
											local v111;
											local v112;
											local v113;
											while true do
												if (v110 == (1288 - (993 + 295))) then
													v111 = 0 + 0;
													v112 = nil;
													v110 = 1172 - (418 + 753);
												end
												if (v110 ~= (1 + 0)) then
												else
													v113 = nil;
													while true do
														if (v111 == (0 + 0)) then
															local v221 = 0;
															while true do
																if (v221 == (0 + 0)) then
																	v112 = v21();
																	v113 = nil;
																	v221 = 1 + 0;
																end
																if (v221 == (530 - (406 + 123))) then
																	v111 = 1;
																	break;
																end
															end
														end
														if (v111 ~= 1) then
														else
															if (v112 == (1770 - (1749 + 20))) then
																v113 = v21() ~= 0;
															elseif (v112 == 2) then
																v113 = v24();
															elseif (v112 == (1 + 2)) then
																v113 = v25();
															end
															v59[v109] = v113;
															break;
														end
													end
													break;
												end
											end
										end
										v57[3] = v21();
										v97 = 1324 - (1249 + 73);
									end
									if (v97 ~= (0 + 0)) then
									else
										v58 = v23();
										v59 = {};
										v97 = 1;
									end
								end
								break;
							end
						end
					end
					if (v53 ~= 0) then
					else
						local v98 = 1145 - (466 + 679);
						while true do
							if (v98 == (4 - 2)) then
								v53 = 1;
								break;
							end
							if ((2 - 1) ~= v98) then
							else
								v56 = {};
								v57 = {v54,v55,nil,v56};
								v98 = 5 - 3;
							end
							if (0 ~= v98) then
							else
								v54 = {};
								v55 = {};
								v98 = 115 - (4 + 110);
							end
						end
					end
					v66 = 585 - (57 + 527);
				end
			end
		end
	end
	local function v29(v60, v61, v62)
		local v63 = v60[1];
		local v64 = v60[2];
		local v65 = v60[3];
		return function(...)
			local v67 = v63;
			local v68 = v64;
			local v69 = v65;
			local v70 = v27;
			local v71 = 1;
			local v72 = -1;
			local v73 = {};
			local v74 = {...};
			local v75 = v12("#", ...) - 1;
			local v76 = {};
			local v77 = {};
			for v84 = 0, v75 do
				if (v84 >= v69) then
					v73[v84 - v69] = v74[v84 + 1];
				else
					v77[v84] = v74[v84 + 1];
				end
			end
			local v78 = (v75 - v69) + 1;
			local v79;
			local v80;
			while true do
				local v85 = 0;
				while true do
					if (v85 == 1) then
						if (v80 <= 40) then
							if (v80 <= 19) then
								if (v80 <= 9) then
									if (v80 <= 4) then
										if (v80 <= 1) then
											if (v80 == 0) then
												local v122 = 0;
												local v123;
												while true do
													if (v122 == 0) then
														v123 = v79[2];
														v77[v123](v13(v77, v123 + 1, v79[3]));
														break;
													end
												end
											elseif (v77[v79[2]] == v79[4]) then
												v71 = v71 + 1;
											else
												v71 = v79[3];
											end
										elseif (v80 <= 2) then
											local v124 = v79[2];
											local v125 = v79[4];
											local v126 = v124 + 2;
											local v127 = {v77[v124](v77[v124 + 1], v77[v126])};
											for v196 = 1, v125 do
												v77[v126 + v196] = v127[v196];
											end
											local v128 = v127[1];
											if v128 then
												v77[v126] = v128;
												v71 = v79[3];
											else
												v71 = v71 + 1;
											end
										elseif (v80 == 3) then
											if (v77[v79[2]] == v77[v79[4]]) then
												v71 = v71 + 1;
											else
												v71 = v79[3];
											end
										elseif not v77[v79[2]] then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									elseif (v80 <= 6) then
										if (v80 > 5) then
											v61[v79[3]] = v77[v79[2]];
										else
											v77[v79[2]] = v61[v79[3]];
										end
									elseif (v80 <= 7) then
										do
											return;
										end
									elseif (v80 == 8) then
										v71 = v79[3];
									else
										local v227 = 0;
										local v228;
										local v229;
										while true do
											if (v227 == 0) then
												v228 = v79[2];
												v229 = v77[v79[3]];
												v227 = 1;
											end
											if (v227 == 1) then
												v77[v228 + 1] = v229;
												v77[v228] = v229[v79[4]];
												break;
											end
										end
									end
								elseif (v80 <= 14) then
									if (v80 <= 11) then
										if (v80 == 10) then
											local v133 = 0;
											local v134;
											local v135;
											local v136;
											while true do
												if (1 == v133) then
													v136 = 0;
													for v341 = v134, v79[4] do
														v136 = v136 + 1;
														v77[v341] = v135[v136];
													end
													break;
												end
												if (0 == v133) then
													v134 = v79[2];
													v135 = {v77[v134](v77[v134 + 1])};
													v133 = 1;
												end
											end
										elseif v77[v79[2]] then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									elseif (v80 <= 12) then
										if (v77[v79[2]] == v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									elseif (v80 > 13) then
										if (v77[v79[2]] ~= v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									else
										v77[v79[2]] = v77[v79[3]][v79[4]];
									end
								elseif (v80 <= 16) then
									if (v80 > 15) then
										if (v77[v79[2]] ~= v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									else
										local v137 = 0;
										local v138;
										while true do
											if (v137 == 0) then
												v138 = v79[2];
												v77[v138] = v77[v138](v77[v138 + 1]);
												break;
											end
										end
									end
								elseif (v80 <= 17) then
									v77[v79[2]][v79[3]] = v77[v79[4]];
								elseif (v80 > 18) then
									local v235 = v79[2];
									v77[v235] = v77[v235](v13(v77, v235 + 1, v72));
								else
									v77[v79[2]] = v77[v79[3]];
								end
							elseif (v80 <= 29) then
								if (v80 <= 24) then
									if (v80 <= 21) then
										if (v80 > 20) then
											v77[v79[2]] = v61[v79[3]];
										else
											v77[v79[2]]();
										end
									elseif (v80 <= 22) then
										if (v79[2] == v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									elseif (v80 > 23) then
										local v240 = v79[2];
										local v241 = v79[4];
										local v242 = v240 + 2;
										local v243 = {v77[v240](v77[v240 + 1], v77[v242])};
										for v312 = 1, v241 do
											v77[v242 + v312] = v243[v312];
										end
										local v244 = v243[1];
										if v244 then
											local v345 = 0;
											while true do
												if (0 == v345) then
													v77[v242] = v244;
													v71 = v79[3];
													break;
												end
											end
										else
											v71 = v71 + 1;
										end
									elseif (v77[v79[2]] ~= v79[4]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								elseif (v80 <= 26) then
									if (v80 == 25) then
										local v143 = 0;
										local v144;
										while true do
											if (v143 == 0) then
												v144 = v79[2];
												v77[v144] = v77[v144](v13(v77, v144 + 1, v79[3]));
												break;
											end
										end
									else
										local v145 = v79[2];
										v77[v145] = v77[v145](v13(v77, v145 + 1, v72));
									end
								elseif (v80 <= 27) then
									local v147 = 0;
									local v148;
									while true do
										if (v147 == 0) then
											v148 = v79[2];
											v77[v148](v77[v148 + 1]);
											break;
										end
									end
								elseif (v80 == 28) then
									v77[v79[2]] = {};
								else
									local v246 = v79[2];
									v77[v246] = v77[v246]();
								end
							elseif (v80 <= 34) then
								if (v80 <= 31) then
									if (v80 == 30) then
										local v149 = v79[2];
										local v150, v151 = v70(v77[v149](v77[v149 + 1]));
										v72 = (v151 + v149) - 1;
										local v152 = 0;
										for v199 = v149, v72 do
											local v200 = 0;
											while true do
												if (v200 == 0) then
													v152 = v152 + 1;
													v77[v199] = v150[v152];
													break;
												end
											end
										end
									else
										v77[v79[2]] = v29(v68[v79[3]], nil, v62);
									end
								elseif (v80 <= 32) then
									v77[v79[2]] = {};
								elseif (v80 > 33) then
									v77[v79[2]] = v77[v79[3]][v79[4]];
								else
									v77[v79[2]] = v77[v79[3]];
								end
							elseif (v80 <= 37) then
								if (v80 <= 35) then
									v77[v79[2]] = v62[v79[3]];
								elseif (v80 > 36) then
									for v318 = v79[2], v79[3] do
										v77[v318] = nil;
									end
								elseif (v79[2] == v77[v79[4]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 <= 38) then
								if not v77[v79[2]] then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 > 39) then
								local v253 = v79[2];
								local v254, v255 = v70(v77[v253](v77[v253 + 1]));
								v72 = (v255 + v253) - 1;
								local v256 = 0;
								for v320 = v253, v72 do
									v256 = v256 + 1;
									v77[v320] = v254[v256];
								end
							else
								local v257 = v79[2];
								local v258, v259 = v70(v77[v257](v13(v77, v257 + 1, v79[3])));
								v72 = (v259 + v257) - 1;
								local v260 = 0;
								for v323 = v257, v72 do
									v260 = v260 + 1;
									v77[v323] = v258[v260];
								end
							end
						elseif (v80 <= 61) then
							if (v80 <= 50) then
								if (v80 <= 45) then
									if (v80 <= 42) then
										if (v80 > 41) then
											local v157 = 0;
											local v158;
											local v159;
											local v160;
											while true do
												if (v157 == 2) then
													for v350 = 1, v79[4] do
														local v351 = 0;
														local v352;
														while true do
															if (v351 == 0) then
																v71 = v71 + 1;
																v352 = v67[v71];
																v351 = 1;
															end
															if (1 == v351) then
																if (v352[1] == 18) then
																	v160[v350 - 1] = {v77,v352[3]};
																else
																	v160[v350 - 1] = {v61,v352[3]};
																end
																v76[#v76 + 1] = v160;
																break;
															end
														end
													end
													v77[v79[2]] = v29(v158, v159, v62);
													break;
												end
												if (v157 == 1) then
													v160 = {};
													v159 = v10({}, {__index=function(v353, v354)
														local v355 = 0;
														local v356;
														while true do
															if (v355 == 0) then
																v356 = v160[v354];
																return v356[1][v356[2]];
															end
														end
													end,__newindex=function(v357, v358, v359)
														local v360 = v160[v358];
														v360[1][v360[2]] = v359;
													end});
													v157 = 2;
												end
												if (v157 == 0) then
													v158 = v68[v79[3]];
													v159 = nil;
													v157 = 1;
												end
											end
										elseif (v77[v79[2]] <= v79[4]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									elseif (v80 <= 43) then
										local v161 = 0;
										local v162;
										while true do
											if (v161 == 0) then
												v162 = v79[2];
												v77[v162](v77[v162 + 1]);
												break;
											end
										end
									elseif (v80 > 44) then
										v77[v79[2]] = v29(v68[v79[3]], nil, v62);
									else
										v77[v79[2]] = not v77[v79[3]];
									end
								elseif (v80 <= 47) then
									if (v80 > 46) then
										if (v77[v79[2]] ~= v79[4]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									elseif (v77[v79[2]] == v79[4]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								elseif (v80 <= 48) then
									local v163 = 0;
									local v164;
									while true do
										if (0 == v163) then
											v164 = v79[2];
											v77[v164](v13(v77, v164 + 1, v79[3]));
											break;
										end
									end
								elseif (v80 == 49) then
									local v266 = 0;
									local v267;
									local v268;
									local v269;
									while true do
										if (v266 == 1) then
											v269 = 0;
											for v402 = v267, v79[4] do
												v269 = v269 + 1;
												v77[v402] = v268[v269];
											end
											break;
										end
										if (v266 == 0) then
											v267 = v79[2];
											v268 = {v77[v267](v13(v77, v267 + 1, v72))};
											v266 = 1;
										end
									end
								else
									local v270 = 0;
									local v271;
									local v272;
									while true do
										if (v270 == 0) then
											v271 = v79[2];
											v272 = v77[v79[3]];
											v270 = 1;
										end
										if (v270 == 1) then
											v77[v271 + 1] = v272;
											v77[v271] = v272[v79[4]];
											break;
										end
									end
								end
							elseif (v80 <= 55) then
								if (v80 <= 52) then
									if (v80 == 51) then
										v77[v79[2]][v79[3]] = v77[v79[4]];
									elseif (v77[v79[2]] <= v79[4]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								elseif (v80 <= 53) then
									do
										return;
									end
								elseif (v80 == 54) then
									local v274 = v79[2];
									v77[v274] = v77[v274](v13(v77, v274 + 1, v79[3]));
								else
									v71 = v79[3];
								end
							elseif (v80 <= 58) then
								if (v80 <= 56) then
									local v167 = 0;
									local v168;
									while true do
										if (v167 == 0) then
											v168 = v77[v79[4]];
											if not v168 then
												v71 = v71 + 1;
											else
												v77[v79[2]] = v168;
												v71 = v79[3];
											end
											break;
										end
									end
								elseif (v80 > 57) then
									if v77[v79[2]] then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								else
									v77[v79[2]][v79[3]] = v79[4];
								end
							elseif (v80 <= 59) then
								v77[v79[2]] = v79[3] ~= 0;
							elseif (v80 > 60) then
								local v279 = 0;
								local v280;
								local v281;
								while true do
									if (v279 == 1) then
										for v405 = v280 + 1, v79[3] do
											v7(v281, v77[v405]);
										end
										break;
									end
									if (v279 == 0) then
										v280 = v79[2];
										v281 = v77[v280];
										v279 = 1;
									end
								end
							else
								local v282 = 0;
								local v283;
								local v284;
								local v285;
								local v286;
								while true do
									if (v282 == 2) then
										for v406 = v283, v72 do
											local v407 = 0;
											while true do
												if (0 == v407) then
													v286 = v286 + 1;
													v77[v406] = v284[v286];
													break;
												end
											end
										end
										break;
									end
									if (v282 == 1) then
										v72 = (v285 + v283) - 1;
										v286 = 0;
										v282 = 2;
									end
									if (v282 == 0) then
										v283 = v79[2];
										v284, v285 = v70(v77[v283](v13(v77, v283 + 1, v79[3])));
										v282 = 1;
									end
								end
							end
						elseif (v80 <= 71) then
							if (v80 <= 66) then
								if (v80 <= 63) then
									if (v80 == 62) then
										local v170 = 0;
										local v171;
										local v172;
										while true do
											if (v170 == 1) then
												for v363 = 1, #v76 do
													local v364 = 0;
													local v365;
													while true do
														if (v364 == 0) then
															v365 = v76[v363];
															for v423 = 0, #v365 do
																local v424 = 0;
																local v425;
																local v426;
																local v427;
																while true do
																	if (v424 == 1) then
																		v427 = v425[2];
																		if ((v426 == v77) and (v427 >= v171)) then
																			v172[v427] = v426[v427];
																			v425[1] = v172;
																		end
																		break;
																	end
																	if (0 == v424) then
																		v425 = v365[v423];
																		v426 = v425[1];
																		v424 = 1;
																	end
																end
															end
															break;
														end
													end
												end
												break;
											end
											if (0 == v170) then
												v171 = v79[2];
												v172 = {};
												v170 = 1;
											end
										end
									else
										local v173 = v79[2];
										v77[v173] = v77[v173]();
									end
								elseif (v80 <= 64) then
									local v175 = 0;
									local v176;
									while true do
										if (v175 == 0) then
											v176 = v77[v79[4]];
											if not v176 then
												v71 = v71 + 1;
											else
												v77[v79[2]] = v176;
												v71 = v79[3];
											end
											break;
										end
									end
								elseif (v80 == 65) then
									local v287 = 0;
									local v288;
									local v289;
									local v290;
									while true do
										if (v287 == 0) then
											v288 = v79[2];
											v289 = {v77[v288](v13(v77, v288 + 1, v72))};
											v287 = 1;
										end
										if (v287 == 1) then
											v290 = 0;
											for v408 = v288, v79[4] do
												v290 = v290 + 1;
												v77[v408] = v289[v290];
											end
											break;
										end
									end
								else
									v77[v79[2]] = v79[3];
								end
							elseif (v80 <= 68) then
								if (v80 > 67) then
									local v177 = v79[2];
									local v178 = {};
									for v201 = 1, #v76 do
										local v202 = 0;
										local v203;
										while true do
											if (v202 == 0) then
												v203 = v76[v201];
												for v392 = 0, #v203 do
													local v393 = v203[v392];
													local v394 = v393[1];
													local v395 = v393[2];
													if ((v394 == v77) and (v395 >= v177)) then
														v178[v395] = v394[v395];
														v393[1] = v178;
													end
												end
												break;
											end
										end
									end
								else
									local v179 = 0;
									local v180;
									local v181;
									local v182;
									while true do
										if (v179 == 1) then
											v182 = 0;
											for v367 = v180, v79[4] do
												local v368 = 0;
												while true do
													if (v368 == 0) then
														v182 = v182 + 1;
														v77[v367] = v181[v182];
														break;
													end
												end
											end
											break;
										end
										if (0 == v179) then
											v180 = v79[2];
											v181 = {v77[v180](v77[v180 + 1])};
											v179 = 1;
										end
									end
								end
							elseif (v80 <= 69) then
								for v204 = v79[2], v79[3] do
									v77[v204] = nil;
								end
							elseif (v80 == 70) then
								local v293 = 0;
								local v294;
								while true do
									if (v293 == 0) then
										v294 = v79[2];
										v77[v294] = v77[v294](v77[v294 + 1]);
										break;
									end
								end
							else
								v62[v79[3]] = v77[v79[2]];
							end
						elseif (v80 <= 76) then
							if (v80 <= 73) then
								if (v80 > 72) then
									v77[v79[2]][v79[3]] = v79[4];
								else
									v61[v79[3]] = v77[v79[2]];
								end
							elseif (v80 <= 74) then
								local v187 = v79[2];
								local v188 = v77[v187];
								local v189 = v79[3];
								for v206 = 1, v189 do
									v188[v206] = v77[v187 + v206];
								end
							elseif (v80 > 75) then
								local v297 = v79[2];
								local v298 = v77[v297];
								local v299 = v79[3];
								for v334 = 1, v299 do
									v298[v334] = v77[v297 + v334];
								end
							else
								v77[v79[2]] = not v77[v79[3]];
							end
						elseif (v80 <= 79) then
							if (v80 <= 77) then
								local v190 = v68[v79[3]];
								local v191;
								local v192 = {};
								v191 = v10({}, {__index=function(v209, v210)
									local v211 = 0;
									local v212;
									while true do
										if (0 == v211) then
											v212 = v192[v210];
											return v212[1][v212[2]];
										end
									end
								end,__newindex=function(v213, v214, v215)
									local v216 = 0;
									local v217;
									while true do
										if (v216 == 0) then
											v217 = v192[v214];
											v217[1][v217[2]] = v215;
											break;
										end
									end
								end});
								for v218 = 1, v79[4] do
									v71 = v71 + 1;
									local v219 = v67[v71];
									if (v219[1] == 18) then
										v192[v218 - 1] = {v77,v219[3]};
									else
										v192[v218 - 1] = {v61,v219[3]};
									end
									v76[#v76 + 1] = v192;
								end
								v77[v79[2]] = v29(v190, v191, v62);
							elseif (v80 > 78) then
								v77[v79[2]] = v79[3] ~= 0;
							else
								v77[v79[2]]();
							end
						elseif (v80 <= 80) then
							v77[v79[2]] = v62[v79[3]];
						elseif (v80 == 81) then
							v77[v79[2]] = v79[3];
						else
							v62[v79[3]] = v77[v79[2]];
						end
						v71 = v71 + 1;
						break;
					end
					if (v85 == 0) then
						v79 = v67[v71];
						v80 = v79[1];
						v85 = 1;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);